- name: Disable SmartScreen
  win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows\System
    name: EnableSmartScreen
    data: 0
    type: dword

- name: Disable firewall for Domain, Public and Private profiles
  ansible.windows.win_firewall:
    state: disabled
    profiles:
      - Domain
      - Private
      - Public

- name: Enable Remote Desktop
  win_regedit:
    path: HKLM:\System\CurrentControlSet\Control\Terminal Server
    name: fDenyTSConnections
    data: 0
    type: dword

- name: Disable Windows Updates
  win_service:
    name: wuauserv
    start_mode: disabled
    state: stopped

- name: Disable Windows Defender Real-Time Protection using Registry part 1
  win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender
    name: DisableAntiSpyware
    data: 1
    type: dword

- name: Disable Windows Defender Real-Time Protection using Registry part 2
  win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection

- name: Disable Windows Defender Real-Time Protection using Registry part 3
  win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection
    name: DisableBehaviorMonitoring
    data: 1
    type: dword

- name: Disable Windows Defender Real-Time Protection using Registry part 4
  win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection
    name: DisableOnAccessProtection
    data: 1
    type: dword

- name: Disable Windows Defender Real-Time Protection using Registry part 5
  win_regedit:
    path: HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection
    name: DisableScanOnRealtimeEnable
    data: 1
    type: dword

- name: Check if RealTime Monitoring is already disabled
  ansible.windows.win_powershell:
    script: |
      try {
        $preference = Get-MpPreference -ErrorAction Stop
        if ($preference.DisableRealtimeMonitoring -eq $true) {
          "already_disabled"
        } else {
          "enabled"
        }
      } catch {
        "defender_not_available"
      }
  register: realtime_status
  failed_when: false

- name: Disable RealTime Monitoring
  ansible.windows.win_powershell:
    script: |
      try {
        Set-MpPreference -DisableRealtimeMonitoring $true
        "success"
      } catch {
        throw "Failed to disable real-time monitoring: $($_.Exception.Message)"
      }
  when: realtime_status.output[0] == "enabled"

- name: Check current exclusion paths
  ansible.windows.win_powershell:
    script: |
      try {
        $preference = Get-MpPreference -ErrorAction Stop
        $exclusions = $preference.ExclusionPath
        if ($exclusions -contains "C:\") {
          "already_excluded"
        } else {
          "not_excluded"
        }
      } catch {
        "defender_not_available"
      }
  register: exclusion_status
  failed_when: false

- name: Adding C:\ to the exclusions of defender
  ansible.windows.win_powershell:
    script: |
      try {
        Set-MpPreference -ExclusionPath "C:\"
        "success"
      } catch {
        throw "Failed to add C:\ exclusion: $($_.Exception.Message)"
      }
  when: exclusion_status.output[0] == "not_excluded"

- name: reboot
  win_reboot: